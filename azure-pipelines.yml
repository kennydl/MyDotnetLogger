# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: $(majorMinorVersion).$(semanticVersion) # $(rev:r)
# name: 1.0$(rev:.r)

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  majorMinorVersion: 1.0
  semanticVersion: $[counter(variables['majorMinorVersion'], 0)]
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  sourceDirectory: $(Build.SourcesDirectory)

steps:
- task: DotNetCoreInstaller@0
  displayName: 'Install NuGet tools'
  inputs:
    version: '2.2.x'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet'
  inputs:
    command: 'restore'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'

- task: DotNetCoreCLI@2
  displayName: 'Run Tests'
  inputs:
    command: 'test'
    testRunTitle: 'LoggerTest'

# - task: NuGetCommand@2
#   displayName: 'Restore NuGet and solution'
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   displayName: 'Build solution'
#   inputs:
#     solution: '**\*.sln'
#     clean: true
#     msbuildArchitecture: 'x64'

# - task: VSTest@2
#   displayName: 'Run Tests'
#   inputs:
#     testSelector: 'testAssemblies'
#     testAssemblyVer2: |
#       **\*test*.dll
#       !**\*TestAdapter.dll
#       !**\obj\**
#     searchFolder: '$(System.DefaultWorkingDirectory)'

- task: DotNetCoreCLI@2
  displayName: 'Pack My.Dotnet.Logger'
  inputs:
    command: 'pack'
    packagesToPack: '**/My.Dotnet.Logger/*.csproj'
    versioningScheme: 'byBuildNumber'

- task: DotNetCoreCLI@2
  displayName: 'Push .nuget package to BackendFeed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'e71a4509-2f9d-4e0b-b9fb-746f7b6b1e6e'

- task: DotNetCoreCLI@2
  displayName: 'Push .nuget package to ProductionFeed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'd3882b5e-344d-4c6e-b233-8c06ee14bc16'